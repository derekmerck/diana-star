# Uses ansible-container to build rcdiana service images

# A lite node only requires a worker and a pointer to a broker
# A self-contained node will run its own broker and dicom interface
# A rpi-ai node requires the movidius service

version: "2"

defaults:
  rcd_arch: "amd64"
#  rcd_arch: "armv7hf"
  root_pw: D1ana!

settings:

  conductor:
    # defaults vars don't work in here, update archicture in base and project
    base: "resin-amd64:stretch"
#    base: "resin-armv7hf:stretch"
    roles_path:
      - ../../roles   # Specify a local path containing Ansible roles
    # volumes:        # Provide a list of volumes to mount
    environment: []   # List or mapping of environment variables

  project_name: "rcdiana-amd64"
#  project_name: "rcdiana-armv7hf"
  deployment_output_path: ../deploy

services:

  dicom:
    from: "resin/{{ rcd_arch }}-debian:stretch"
    roles:
      - "common-rc"
      - "orthanc"
    entrypoint: ["/usr/bin/tini", "--"]
    command:    ["/usr/sbin/Orthanc"]
    volumes:
      - "/var/lib/orthanc/db/"
    ports:
      - "8042:8042"
      - "4242:4242"
    user: "orthanc"

  broker:
    from: "resin/{{ rcd_arch }}-debian:stretch"
    roles:
      - "common-rc"
      - "redis"
    entrypoint: ["/usr/bin/tini", "--"]
    command:    ["redis-server"]
    volumes:
      - "/data/"
    ports:
      - "6379:6379"
    user: "redis"

  worker:
    from:  "resin/{{ rcd_arch }}-debian:stretch"
    roles:
      - "common-rc"
      - "diana"
    entrypoint: ["/usr/bin/tini", "--"]
    command:    ["python", "dcelery.py", "worker"]
    volumes:
      - "/data/"
    links:
      - "broker"
    user: "diana"


  movidius:
    from: "resin/{{ rcd_arch }}-debian:stretch"
    roles:
      - "common-rc"
      - "movidius"
    entrypoint: ["/usr/bin/tini", "--"]
    command:    ["tail", "-f", "/dev/null"]

registries:
  docker:
    url: "https://hub.docker.com/"
    namespace: "rcdiana"
