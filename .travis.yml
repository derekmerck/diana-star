sudo: required
dist: trusty
language: python
group: edge

python:
  - "3.6"
services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

before_install:
  - pip install -U pip
  - pip install docker-py
  - pip install -e ./packages/diana ./packages/guid-mint

install:
#  - sudo apt-add-repository 'deb http://archive.ubuntu.com/ubuntu trusty-backports universe'
#  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
#
#  # Add docker edge
#  - sudo apt-get update -qq
#  - sudo apt-get -y install docker-ce
#  - docker --version
#  - docker-compose version

  # Put docker into "experimental" for manifest function
  - mkdir -p $HOME/.docker
  - echo '{"experimental":"enabled"}' > "$HOME/.docker/config.json"

#  - pip install https://github.com/ansible/ansible/archive/devel.tar.gz

#after_install:
#
# -----------------------------------
# Build Ansible-Container conductors for resin base images
# -----------------------------------
#
#  # build conductors
#  - cd $TRAVIS_BUILD_DIR/ansible-containers/conductors && docker-compose build
#
#  # Login to docker for push
#  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#
#  # Push conductors for reference
#  - docker tag container-conductor-resin-amd64-stretch:0.9.3rc0 rcdiana/container-conductor-resin-amd64-stretch:0.9.3rc0
#  - docker push rcdiana/container-conductor-resin-amd64-stretch:0.9.3rc0
#
#  - docker tag container-conductor-resin-armv7hf-stretch:0.9.3rc0 rcdiana/container-conductor-resin-armv7hf-stretch:0.9.3rc0
#  - docker push rcdiana/container-conductor-resin-armv7hf-stretch:0.9.3rc0

before_script:

# -----------------------------------
# Build rcDiana service containers
# -----------------------------------

  # Setup Ansible-Container
  - pip install -e git+https://github.com/ansible/ansible-container.git@develop#egg=ansible_container[docker]

  # Register qemu as cross-compiler
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset

  - cd containers/rcdiana

  - export RCD_ARCH=amd64
  - echo "Setting up $RCD_ARCH build"

  ## Get working conductor for arch
  - docker pull rcdiana/container-conductor-resin-${RCD_ARCH}-stretch:0.9.3rc0
  - docker tag rcdiana/container-conductor-resin-${RCD_ARCH}-stretch:0.9.3rc0 container-conductor-resin-${RCD_ARCH}-stretch:0.9.3rc0

  - sed -E -i "s/(amd64)|(armv7hf)/$RCD_ARCH/" container.yml  # Replace settings arches
  - ansible-container build

  - export RCD_ARCH=armv7hf
  - echo "Setting up $RCD_ARCH build"

  ## Get working conductor for arch
  - docker pull rcdiana/container-conductor-resin-${RCD_ARCH}-stretch:0.9.3rc0
  - docker tag rcdiana/container-conductor-resin-${RCD_ARCH}-stretch:0.9.3rc0 container-conductor-resin-${RCD_ARCH}-stretch:0.9.3rc0

  - sed -E -i "s/(amd64)|(armv7hf)/$RCD_ARCH/" container.yml  # Replace settings arches
  - ansible-container build


script: True

#  - python3 test/test_distrib.py


#after_script:  True


after_success:

# -----------------------------------
# Push rcDiana service containers
# -----------------------------------

  # Login to docker, retag, manifest, and push
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # -m mocks docker into experimental to have access to manifest
  - python manifest-it.py -f service_manifest.yml




